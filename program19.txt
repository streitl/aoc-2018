#ip 5

# Initial block

	00 - addi 5 16 5 # r5 = r5 + 16 (go to 17)


# Outer loop : r4 from 1 to r2

	01 - seti 1 8 4  # r4 = 1
	

# Inner loop: r3 from 1 to r2

	02 - seti 1 5 3  # r3 = 1
		
	03 - mulr 4 3 1  # r1 = r3 * r4
	04 - eqrr 1 2 1  # r1 = r1 == r2
	05 - addr 1 5 5  # r5 = r5 + r1
	
	06 - addi 5 1 5  # r5 = r5 + 1  (go to 8)
	
	07 - addr 4 0 0  # r0 = r4 + r0 (if r3 * r4 == r2 : r0 += r4)
	
	08 - addi 3 1 3  # r3 = r3 + 1
		
	09 - gtrr 3 2 1  # r1 = r3 > r2
	10 - addr 5 1 5  # r5 = r5 + 1  (go to 12)
	11 - seti 2 5 5  # r5 = 2       (go to 3)
	
# End of inner loop
	
	12 - addi 4 1 4  # r4 = r4 + 1
	
	13 - gtrr 4 2 1  # r1 = r4 > r2
	14 - addr 1 5 5  # r5 = r1 + r5 (if r4 > r2 then go to 16 else go to 15)
	15 - seti 1 2 5  # r5 = 1       (go to 2)
	
	
# End of outer loop

	16 - mulr 5 5 5  # r5 = r5 * r5 (r5 becomes 16*16 = 256 so program ends)


# After this block, r2 = (2 * 2) * 19 * 11 = 836

	17 - addi 2 2 2  # r2 = r2 + 2
	18 - mulr 2 2 2  # r2 = r2 * r2
	19 - mulr 5 2 2  # r2 = r5 * r2 (r5 here is 19)
	20 - muli 2 11 2 # r2 = r2 * 11


# After this block, r1 = 8 * 22 + 18 = 194

	21 - addi 1 8 1  # r1 = r1 + 8
	22 - mulr 1 5 1  # r1 = r5 * r1 (r5 here is 22)
	23 - addi 1 18 1 # r1 = r1 + 18
	

# Control block depending if r0 = 0 or 1

	24 - addr 2 1 2  # r2 = r1 + r2 (r2 = 194 + 836 = 1030)
	25 - addr 5 0 5  # r5 = r0 + r5 (if r0 == 1 jump to 27)
	26 - seti 0 7 5  # r5 = r0      (jump to r0 (which is 0 or 1))

# After this block, r1 = ((27 * 28) + 29) * 30 * 14 * 32 = 10550400

	27 - setr 5 0 1  # r1 = r5      (r5 is 27 here)
	28 - mulr 1 5 1  # r1 = r1 * r5 (r5 is 28 here)
	29 - addr 5 1 1  # r1 = r1 + r5 (r5 is 29 here)
	30 - mulr 5 1 1  # r1 = r1 * r5 (r5 is 30 here)
	31 - muli 1 14 1 # r1 = r1 * 14 
	32 - mulr 1 5 1  # r1 = r1 * r5 (r5 is 32 here)

# After this block, r2 = 10550400 + 1030 = 10551430

	33 - addr 2 1 2  # r2 = r1 + r2


# This block starts the main loop at instruction 1

	34 - seti 0 0 0  # r0 = 0
	35 - seti 0 9 5  # r5 = 0       (go to 1)
